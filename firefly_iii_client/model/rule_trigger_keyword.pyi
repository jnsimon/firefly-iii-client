# coding: utf-8

"""
    Firefly III API Client

    This is the Python client for Firefly III API  # noqa: E501

    The version of the OpenAPI document: 2.0.12
    Contact: james@firefly-iii.org
    Generated by: https://openapi-generator.tech
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from firefly_iii_client import schemas  # noqa: F401


class RuleTriggerKeyword(
    schemas.EnumBase,
    schemas.StrSchema
):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.

    The type of thing this trigger responds to. A limited set is possible
    """
    
    @schemas.classproperty
    def FROM_ACCOUNT_STARTS(cls):
        return cls("from_account_starts")
    
    @schemas.classproperty
    def FROM_ACCOUNT_ENDS(cls):
        return cls("from_account_ends")
    
    @schemas.classproperty
    def FROM_ACCOUNT_IS(cls):
        return cls("from_account_is")
    
    @schemas.classproperty
    def FROM_ACCOUNT_CONTAINS(cls):
        return cls("from_account_contains")
    
    @schemas.classproperty
    def TO_ACCOUNT_STARTS(cls):
        return cls("to_account_starts")
    
    @schemas.classproperty
    def TO_ACCOUNT_ENDS(cls):
        return cls("to_account_ends")
    
    @schemas.classproperty
    def TO_ACCOUNT_IS(cls):
        return cls("to_account_is")
    
    @schemas.classproperty
    def TO_ACCOUNT_CONTAINS(cls):
        return cls("to_account_contains")
    
    @schemas.classproperty
    def AMOUNT_LESS(cls):
        return cls("amount_less")
    
    @schemas.classproperty
    def AMOUNT_EXACTLY(cls):
        return cls("amount_exactly")
    
    @schemas.classproperty
    def AMOUNT_MORE(cls):
        return cls("amount_more")
    
    @schemas.classproperty
    def DESCRIPTION_STARTS(cls):
        return cls("description_starts")
    
    @schemas.classproperty
    def DESCRIPTION_ENDS(cls):
        return cls("description_ends")
    
    @schemas.classproperty
    def DESCRIPTION_CONTAINS(cls):
        return cls("description_contains")
    
    @schemas.classproperty
    def DESCRIPTION_IS(cls):
        return cls("description_is")
    
    @schemas.classproperty
    def TRANSACTION_TYPE(cls):
        return cls("transaction_type")
    
    @schemas.classproperty
    def CATEGORY_IS(cls):
        return cls("category_is")
    
    @schemas.classproperty
    def BUDGET_IS(cls):
        return cls("budget_is")
    
    @schemas.classproperty
    def TAG_IS(cls):
        return cls("tag_is")
    
    @schemas.classproperty
    def CURRENCY_IS(cls):
        return cls("currency_is")
    
    @schemas.classproperty
    def HAS_ATTACHMENTS(cls):
        return cls("has_attachments")
    
    @schemas.classproperty
    def HAS_NO_CATEGORY(cls):
        return cls("has_no_category")
    
    @schemas.classproperty
    def HAS_ANY_CATEGORY(cls):
        return cls("has_any_category")
    
    @schemas.classproperty
    def HAS_NO_BUDGET(cls):
        return cls("has_no_budget")
    
    @schemas.classproperty
    def HAS_ANY_BUDGET(cls):
        return cls("has_any_budget")
    
    @schemas.classproperty
    def HAS_NO_TAG(cls):
        return cls("has_no_tag")
    
    @schemas.classproperty
    def HAS_ANY_TAG(cls):
        return cls("has_any_tag")
    
    @schemas.classproperty
    def NOTES_CONTAINS(cls):
        return cls("notes_contains")
    
    @schemas.classproperty
    def NOTES_START(cls):
        return cls("notes_start")
    
    @schemas.classproperty
    def NOTES_END(cls):
        return cls("notes_end")
    
    @schemas.classproperty
    def NOTES_ARE(cls):
        return cls("notes_are")
    
    @schemas.classproperty
    def NO_NOTES(cls):
        return cls("no_notes")
    
    @schemas.classproperty
    def ANY_NOTES(cls):
        return cls("any_notes")
    
    @schemas.classproperty
    def SOURCE_ACCOUNT_IS(cls):
        return cls("source_account_is")
    
    @schemas.classproperty
    def DESTINATION_ACCOUNT_IS(cls):
        return cls("destination_account_is")
    
    @schemas.classproperty
    def SOURCE_ACCOUNT_STARTS(cls):
        return cls("source_account_starts")
